<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | Aztack's Blog]]></title>
  <link href="http://aztack.github.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://aztack.github.com/"/>
  <updated>2012-08-23T13:59:11+08:00</updated>
  <id>http://aztack.github.com/</id>
  <author>
    <name><![CDATA[aztack]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Define method in JavaScript and Ruby]]></title>
    <link href="http://aztack.github.com/blog/2012/08/16/Define-method-in-JavaScript-and-Ruby/"/>
    <updated>2012-08-16T14:55:00+08:00</updated>
    <id>http://aztack.github.com/blog/2012/08/16/Define-method-in-JavaScript-and-Ruby</id>
    <content type="html"><![CDATA[<p>In javascript, function can be attached onto any <em>object</em>;
<em>object</em> attributes can be anything,when it is a function, it become a method of that <em>object</em>.</p>

<p>If <em>object</em> is prototype of a function, the attached function becomes
instance method of that function(`class').</p>

<p>In ruby, all methods are reside in instance of <strong>Class</strong>:</p>

<ul>
<li>intance methods are in object.class;</li>
<li>singleton methods are in object.eigenclass. in code <em>class &lt;&lt; object</em>.in another word, eigenclass;</li>
<li>class methods are in eigenclass of object.class, in code <em>object.class.eigenclass</em></li>
</ul>


<p>``` ruby Object#eigenclass</p>

<pre><code>class Object
    def eigenclass
        class &lt;&lt; self;self;end
    end
end
</code></pre>

<p>```</p>

<h2>Define <strong>singleton</strong> method</h2>

<p>``` javascript define singleton method in javascript</p>

<pre><code>var obj = {};
obj.greeting = function(){
    console.log('hi');
};
</code></pre>

<p>```</p>

<p>``` ruby define singleton method in ruby</p>

<pre><code>obj = {}
def obj.greeting
    puts 'hi'
end
</code></pre>

<p>```</p>

<h2>Define <strong>instance</strong> method</h2>

<p>``` javascript define instance method in javascript</p>

<pre><code>function Clazz(){}
Clazz.prototype.instanceMethod = function(){};
</code></pre>

<p>```</p>

<p>``` ruby define instance method in ruby</p>

<pre><code>class Clazz
    def instanceMethod;end
end
</code></pre>

<p>```</p>

<h2>Define <strong>class</strong> method</h2>

<p>``` javascript define class method in javascript</p>

<pre><code>function Clazz(){}
Clazz.classMethod = function(){};
</code></pre>

<p>```</p>

<p>``` ruby define class method in ruby</p>

<pre><code>class Clazz
    define self.classMethod;end
end
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
